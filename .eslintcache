[{"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/index.js":"1","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/App.js":"2","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/reportWebVitals.js":"3","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/containers/Header.js":"4","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/About.js":"5","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Login.js":"6","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Signup.js":"7","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Songs.js":"8","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Lyrics.js":"9","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Write.js":"10","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/MagicForm.js":"11","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/LyricForm.js":"12","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/Favorites.js":"13","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/MySongs.js":"14","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/EditForm.js":"15","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/BinaryJazz.js":"16","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/RandomWord.js":"17","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/DefineWord.js":"18"},{"size":540,"mtime":1611699214667,"results":"19","hashOfConfig":"20"},{"size":811,"mtime":1612307097389,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611697486655,"results":"22","hashOfConfig":"20"},{"size":823,"mtime":1612306782223,"results":"23","hashOfConfig":"20"},{"size":948,"mtime":1611953717948,"results":"24","hashOfConfig":"20"},{"size":917,"mtime":1611944753709,"results":"25","hashOfConfig":"20"},{"size":1301,"mtime":1612315238493,"results":"26","hashOfConfig":"20"},{"size":2737,"mtime":1611876432617,"results":"27","hashOfConfig":"20"},{"size":365,"mtime":1611954897171,"results":"28","hashOfConfig":"20"},{"size":450,"mtime":1611716693918,"results":"29","hashOfConfig":"20"},{"size":10924,"mtime":1620928748362,"results":"30","hashOfConfig":"20"},{"size":3396,"mtime":1611951359158,"results":"31","hashOfConfig":"20"},{"size":2541,"mtime":1621262943669,"results":"32","hashOfConfig":"20"},{"size":3727,"mtime":1620928787523,"results":"33","hashOfConfig":"20"},{"size":4782,"mtime":1611942983137,"results":"34","hashOfConfig":"20"},{"size":806,"mtime":1611946668581,"results":"35","hashOfConfig":"20"},{"size":1671,"mtime":1611949030333,"results":"36","hashOfConfig":"20"},{"size":1620,"mtime":1611951204730,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1n2xg78",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/index.js",[],["77","78"],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/App.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/reportWebVitals.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/containers/Header.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/About.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Login.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Signup.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Songs.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Lyrics.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/pages/Write.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/MagicForm.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/LyricForm.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/Favorites.js",["79","80"],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/MySongs.js",["81"],"import React, { Component } from \"react\";\nimport EditForm from \"../components/EditForm\";\n\nimport \"../styling/Favorites.css\";\n\nexport default class MySongs extends Component {\n  state = {\n    songs: [],\n    song: {\n      artist: \"\",\n      title: \"\",\n      lyrics: [],\n    },\n    edit: false,\n    show: false,\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/songs\")\n      .then((response) => response.json())\n      .then((songs) => this.setState({ songs: songs }));\n  }\n\n  removeSong = (event) => {\n    console.log(\"clicked delete\");\n    fetch(`http://localhost:3000/songs/${event.target.id}`, {\n      method: \"DELETE\",\n    }).then(() => {\n      let filteredSongs = this.state.songs.filter(\n        (song) => song.id !== event.target.id\n      );\n      this.setState({ songs: filteredSongs });\n    });\n  };\n\n  renderSongs = () => {\n    return this.state.songs.map((song) => {\n      return (\n        <div key={song.id}>\n          <a\n            onClick={this.showSong}\n            className=\"song-link\"\n            key={`${song.id}+button`}\n            id={song.id}\n          >\n            {song.artist} - {song.title}\n          </a>\n          <button\n            onClick={this.removeSong}\n            className=\"delete-button\"\n            id={song.id}\n            key={`${song.id}-button`}\n          >\n            x\n          </button>\n        </div>\n      );\n    });\n  };\n\n  showSong = (event) => {\n    this.setState({ show: true });\n    fetch(`http://localhost:3000/songs/${event.target.id}`)\n      .then((response) => response.json())\n      .then((song) => {\n        this.setState({\n          song: {\n            artist: song.artist,\n            title: song.title,\n            lyrics: song.lyrics,\n          },\n          songId: event.target.id,\n        });\n      });\n  };\n\n  clearSong = () => {\n    this.setState({\n      song: {\n        artist: \"\",\n        title: \"\",\n        lyrics: [],\n      },\n      show: false,\n      songId: 0,\n    });\n  };\n\n  editSong = () => {\n    this.setState({ edit: !this.state.edit, show: false });\n  };\n\n  hideEditForm = () => {\n    this.setState({ edit: !this.state.edit, show: false });\n  };\n\n  saveEdits = () => {\n    this.setState({ edit: false });\n    window.location.replace(\"/lyrics\");\n  };\n\n  render() {\n    return (\n      <div className=\"mysongsection\">\n        <div className=\"my-songs-section\">\n          <h2 className=\"title\">My Written Songs</h2>\n          {this.renderSongs()}\n        </div>\n        {this.state.show === false ? null : (\n          <div>\n            <h2 className=\"title\">{this.state.song.artist}</h2>\n            <h3 className=\"title\">{this.state.song.title}</h3>\n          </div>\n        )}\n        <div className=\"show-song\">\n          {this.state.show === false\n            ? null\n            : this.state.song.lyrics.map((row, i) => {\n                return (\n                  <div>\n                    <p className=\"lyric-row\" key={i} id={`lyric${row}`}>\n                      {row}{\" \"}\n                    </p>\n                  </div>\n                );\n              })}\n          {this.state.show === true ? (\n            <div className=\"buttons\">\n              <button onClick={this.editSong} className=\"clear-button\">\n                Edit\n              </button>\n              <button onClick={this.clearSong} className=\"clear-button\">\n                Hide\n              </button>\n            </div>\n          ) : null}\n        </div>\n        {this.state.edit === false ? null : (\n          <div className=\"edit-form\">\n            <EditForm\n              hideEditForm={this.hideEditForm}\n              passedState={this.state}\n              saveEdits={this.saveEdits}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/EditForm.js",["82"],"import React, { Component } from \"react\";\nimport \"../styling/Edit.css\";\nimport MagicForm from \"./MagicForm\";\n\nexport default class SongForm extends Component {\n  state = {\n    numLines: 0,\n    titleInput: \"\",\n    artistInput: \"\",\n    lyrics: [],\n    saved: \"\",\n    edit: false,\n    songId: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      numLines: this.props.passedState.song.lyrics.length,\n      titleInput: this.props.passedState.song.title,\n      artistInput: this.props.passedState.song.artist,\n      lyrics: this.props.passedState.song.lyrics,\n      songId: this.props.passedState.songId,\n      edit: true,\n    });\n    this.props.passedState.song.lyrics.map((lyric, i) => {\n      this.setState({ [`row${i + 1}`]: lyric });\n    });\n  }\n\n  addLine = (event) => {\n    event.preventDefault();\n    this.setState({ numLines: this.state.numLines + 1 });\n  };\n\n  removeLine = (event) => {\n    event.preventDefault();\n    this.setState({ numLines: this.state.numLines - 1 });\n  };\n\n  clearRow = (event) => {\n    event.preventDefault();\n    let stateName = event.target.name;\n    this.setState({\n      [`${stateName}fallback`]: this.state[`${stateName}`],\n      [stateName]: \"\",\n    });\n  };\n\n  undoChange = (event) => {\n    event.preventDefault();\n    let stateName = event.target.name;\n    this.setState({ [stateName]: this.state[`${stateName}fallback`] });\n  };\n\n  showLines = () => {\n    let lines = [];\n    for (let i = 0; i < this.state.numLines; i++) {\n      lines.push(\n        <div className=\"lyric-row\">\n          <p className=\"row-number\">{i + 1}</p>\n          <input\n            key={`input${i}`}\n            defaultValue={this.props.passedState.song.lyrics[i]}\n            onChange={this.handleChange}\n            name={[`row${i + 1}`]}\n            className=\"lyric-row-input\"\n          />\n          <button\n            key={`clear${i}`}\n            onClick={this.clearRow}\n            name={`row${i}`}\n            type=\"submit\"\n            className=\"clear-line-button\"\n          >\n            x\n          </button>\n          <button\n            key={`refresh${i}`}\n            onClick={this.undoChange}\n            name={`row${i}`}\n            type=\"submit\"\n            className=\"clear-line-button\"\n          >\n            ↺\n          </button>\n        </div>\n      );\n    }\n    return lines;\n  };\n\n  showButtons = () => {\n    return (\n      <div>\n        <div>\n          <button className=\"add-row-button\" onClick={this.addLine}>\n            + line\n          </button>\n          <button className=\"add-row-button\" onClick={this.removeLine}>\n            - line\n          </button>\n        </div>\n        <div>\n          <input\n            // onClick={this.props.hideEditForm}\n            type=\"submit\"\n            className=\"save-button\"\n            value=\"Save\"\n          />\n          <input\n            onClick={this.props.hideEditForm}\n            className=\"save-button\"\n            value=\"Hide\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  showTitles = () => {\n    return (\n      <div className=\"lyric-form\">\n        <input\n          onChange={this.handleChange}\n          name=\"titleInput\"\n          className=\"song-title-input\"\n          defaultValue={this.state.titleInput}\n        />\n        <input\n          onChange={this.handleChange}\n          name=\"artistInput\"\n          className=\"artist-input\"\n          defaultValue={this.state.artistInput}\n        />\n      </div>\n    );\n  };\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  saveLyrics = (event) => {\n    event.preventDefault();\n    let keyArray = Object.keys(this.state);\n    let rowKeyArray = keyArray.filter((key) => key.includes(\"row\"));\n    let lyricArray = rowKeyArray.map((key) => this.state[key]);\n    this.setState({ lyrics: lyricArray });\n    let id = this.state.songId;\n    this.setState({ lyrics: lyricArray });\n    fetch(`http://localhost:3000/songs/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        artist: this.state.artistInput,\n        title: this.state.titleInput,\n        lyrics: lyricArray,\n      }),\n    })\n      .then(this.setState({ saved: \"Updated!\", edit: false }))\n      .then(setTimeout(() => this.props.saveEdits(), 1000));\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.edit === true ? <MagicForm /> : null}\n\n        <form onSubmit={this.saveLyrics} className=\"lyric-form\">\n          {this.state.edit === true ? this.showTitles() : null}\n          {this.state.edit === true ? this.showLines() : null}\n          {this.state.edit === true ? this.showButtons() : null}\n        </form>\n        {this.state.saved === \"\" ? null : <p>{this.state.saved}</p>}\n      </div>\n    );\n  }\n}\n","/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/BinaryJazz.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/RandomWord.js",[],"/Users/pandasaywhat/Flatiron/learnLabs/4mod/lyricize/frontlyrics/src/components/DefineWord.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":10,"column":26,"nodeType":"89","endLine":10,"endColumn":37},{"ruleId":"90","severity":1,"message":"91","line":52,"column":17,"nodeType":"92","endLine":57,"endColumn":18},{"ruleId":"90","severity":1,"message":"91","line":40,"column":11,"nodeType":"92","endLine":45,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":25,"column":55,"nodeType":"95","messageId":"96","endLine":25,"endColumn":57},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]